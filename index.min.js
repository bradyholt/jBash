// jbash - v1.29.0
options={errexit:!1,xtrace:!1},set=(e=>{if(!e.match(/^(-|\+)/))throw new Error("Invalid set value");let r="-"==e[0];switch(e[1]){case"x":options.xtrace=r;case"e":options.errexit=r}}),args=process.argv.slice(global.shebangInvoked?3:2);for(let e=0;e<=args.length;e++)global[`$${e}`]=0==e?__filename:args[e-1];cd=process.chdir,echo=console.log,exit=process.exit,env=process.env;for(let e in env)global[`$${e}`]=env[e];let fs=require("fs");readFile=((e,r="utf-8")=>fs.readFileSync(e,{encoding:r})),writeFile=((e,r,t="utf-8")=>{fs.writeFileSync(e,r,{encoding:t})}),$=((e,r)=>{options.xtrace&&echo(e);let t=require("child_process").spawnSync(e,[],{stdio:[0,r?"inherit":"pipe",r?"inherit":"pipe"],shell:!0});if(0!=t.status){let s=t.stderr?t.stderr.toString().replace("/bin/sh: ",""):null,i=s||`Error running: ${e}`;if(echo(i),options.errexit)throw err=new Error(i),err.status=t.status,err.stderr=s,err.output=t.output,err;return r?null:i}return t.stdout?t.stdout.toString().replace(/^\n$/,""):null}),eval=(e=>$(e,!0));